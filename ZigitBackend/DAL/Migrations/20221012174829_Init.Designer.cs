// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221012174829_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Domain.Entities.PersonalDetails", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Avatar")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<DateTime>("JoinedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Team")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("UserId");

                    b.ToTable("PersonalDetails");

                    b.HasData(
                        new
                        {
                            UserId = 1L,
                            Avatar = "https://avatarfiles.alphacoders.com/164/thumb-164632.jpg",
                            JoinedAt = new DateTime(2018, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Test Test",
                            Team = "Developers"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Project", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int>("BugsCount")
                        .HasColumnType("int");

                    b.Property<int>("DurationInDays")
                        .HasColumnType("int");

                    b.Property<bool>("MadeDeadline")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProjectGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BugsCount = 74,
                            DurationInDays = 35,
                            MadeDeadline = false,
                            Name = "Backend Project",
                            ProjectGuid = new Guid("9c163d66-2453-4e99-96fe-47752bbad4d3"),
                            Score = 88,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            BugsCount = 52,
                            DurationInDays = 55,
                            MadeDeadline = false,
                            Name = "Design Project",
                            ProjectGuid = new Guid("faa77f1d-be19-40e3-b496-bda6a0833157"),
                            Score = 68,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            BugsCount = 32,
                            DurationInDays = 51,
                            MadeDeadline = true,
                            Name = "Frontend Project",
                            ProjectGuid = new Guid("62e0bbe1-f23e-470d-bf65-9756b1d481e8"),
                            Score = 99,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            BugsCount = 42,
                            DurationInDays = 68,
                            MadeDeadline = true,
                            Name = "Design Project",
                            ProjectGuid = new Guid("3e9f6f85-efcc-4b70-b994-ff5f625734f1"),
                            Score = 97,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            BugsCount = 64,
                            DurationInDays = 66,
                            MadeDeadline = false,
                            Name = "Backend Project",
                            ProjectGuid = new Guid("b1046bc7-b8a7-471f-a0b0-cc483d97de6c"),
                            Score = 97,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            BugsCount = 63,
                            DurationInDays = 61,
                            MadeDeadline = true,
                            Name = "Fullstack Project",
                            ProjectGuid = new Guid("8b75298f-4a60-47cc-ba61-9ac7f39a2e15"),
                            Score = 79,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            BugsCount = 50,
                            DurationInDays = 62,
                            MadeDeadline = true,
                            Name = "Backend Project",
                            ProjectGuid = new Guid("1e8ad54a-4995-4be8-8242-2bcec1123bf1"),
                            Score = 66,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            BugsCount = 72,
                            DurationInDays = 44,
                            MadeDeadline = false,
                            Name = "Backend Project",
                            ProjectGuid = new Guid("feb9ddc1-1487-4160-9942-b1b682148dc9"),
                            Score = 79,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 9L,
                            BugsCount = 72,
                            DurationInDays = 66,
                            MadeDeadline = true,
                            Name = "Backend Project",
                            ProjectGuid = new Guid("17111b01-66e4-4bf5-b08e-d517a8068044"),
                            Score = 93,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 10L,
                            BugsCount = 47,
                            DurationInDays = 39,
                            MadeDeadline = true,
                            Name = "Design Project",
                            ProjectGuid = new Guid("33eb1907-637c-4d90-92f8-306b7bbb8318"),
                            Score = 100,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 11L,
                            BugsCount = 56,
                            DurationInDays = 68,
                            MadeDeadline = false,
                            Name = "Design Project",
                            ProjectGuid = new Guid("84824669-f771-443a-84ee-a427aa735b5b"),
                            Score = 87,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 12L,
                            BugsCount = 73,
                            DurationInDays = 36,
                            MadeDeadline = true,
                            Name = "Fullstack Project",
                            ProjectGuid = new Guid("7e691d32-4df1-4f39-a4b9-a964f923b071"),
                            Score = 76,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 13L,
                            BugsCount = 34,
                            DurationInDays = 36,
                            MadeDeadline = true,
                            Name = "Backend Project",
                            ProjectGuid = new Guid("bd373f61-4171-4e63-85fe-87ff6cab55da"),
                            Score = 90,
                            UserId = 1L
                        },
                        new
                        {
                            Id = 14L,
                            BugsCount = 65,
                            DurationInDays = 59,
                            MadeDeadline = false,
                            Name = "Design Project",
                            ProjectGuid = new Guid("19cd75b7-131f-4bb7-a698-d2e8e15505a9"),
                            Score = 95,
                            UserId = 1L
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "admin@gmail.com",
                            Password = "Aa123456"
                        });
                });

            modelBuilder.Entity("Domain.Entities.PersonalDetails", b =>
                {
                    b.HasOne("Domain.Entities.User", null)
                        .WithOne("PersonalDetails")
                        .HasForeignKey("Domain.Entities.PersonalDetails", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("PersonalDetails")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
